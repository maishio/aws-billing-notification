name: Terraform check and plan

on:
  workflow_dispatch:
  pull_request:
    types: [opened, reopened, synchronize]
    branches: [main, develop]

jobs:
  check-and-plan:
    runs-on: ubuntu-latest
    env:
      LOG_LEVEL: ERROR
    permissions:
      id-token: write
      contents: read
      pull-requests: write

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        role-to-assume: ${{ secrets.AWS_ASSUME_ROLE_ARN }}
        aws-region: us-east-1

    - name: Setup Terraform
      id: setup-terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.3.9

    - name: Install Terragrunt
      run: |
        TERRAGRUNT_VERSION=$(curl -s https://api.github.com/repos/gruntwork-io/terragrunt/releases/latest | jq -r .tag_name)
        curl -sL -o terragrunt "https://github.com/gruntwork-io/terragrunt/releases/download/${TERRAGRUNT_VERSION}/terragrunt_linux_amd64"
        sudo install -o root -g root -m 0755 terragrunt /usr/local/bin/

    - name: Terraform Format and Generate Terraform.tfvars
      id: format
      run: |
        terraform fmt -check -recursive
        echo "teams_webhook_url = \"${{ secrets.TEAMS_WEBHOOK_URL }}\"" > ./terraform/environments/prod/lambda/terraform.tfvars
      working-directory: ./terraform

    - name: Terragrunt init
      id: init
      run: terragrunt run-all init --terragrunt-log-level $LOG_LEVEL --terragrunt-non-interactive
      working-directory: ./terraform/environments/prod

    - name: Terragrunt plan
      id: plan
      run: terragrunt run-all plan --terragrunt-log-level $LOG_LEVEL
      working-directory: ./terraform/environments/prod
      continue-on-error: true
