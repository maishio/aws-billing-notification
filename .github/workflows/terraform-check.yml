name: Terraform check and plan

on:
  workflow_dispatch:
  pull_request:
    types: [opened, reopened, synchronize]
    branches: [main, develop]

jobs:
  check-and-plan:
    runs-on: ubuntu-latest
    env:
      LOG_LEVEL: INFO
    permissions:
      id-token: write
      contents: read
      pull-requests: write

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        role-to-assume: ${{ secrets.AWS_ASSUME_ROLE_ARN }}
        aws-region: us-east-1

    - name: Setup Terraform
      id: setup-terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_wrapper: false
        terraform_version: 1.3.9

    - name: Install Terragrunt
      run: |
        TERRAGRUNT_VERSION=$(curl -s https://api.github.com/repos/gruntwork-io/terragrunt/releases/latest | jq -r .tag_name)
        curl -sL -o terragrunt "https://github.com/gruntwork-io/terragrunt/releases/download/${TERRAGRUNT_VERSION}/terragrunt_linux_amd64"
        sudo install -o root -g root -m 0755 terragrunt /usr/local/bin/

    - name: Generate Terraform.tfvars
      run: echo "teams_webhook_url = \"${{ secrets.TEAMS_WEBHOOK_URL }}\"" > terraform.tfvars
      working-directory:  ./terraform/environments/prod/lambda

    - name: Modify env.hcl
      run: |
        ACCOUNT=$(aws sts get-caller-identity --query Account --output text)
        sed -i "s/123456789012/${ACCOUNT}/" env.hcl
      working-directory:  ./terraform/environments/prod

    - name: Terraform Format
      id: fmt
      run: terraform fmt -check -recursive
      working-directory: ./terraform

    - name: Terragrunt init
      id: init
      run: terragrunt run-all init --terragrunt-log-level $LOG_LEVEL --terragrunt-non-interactive
      working-directory: ./terraform/environments/prod

    - name: Terragrunt Validate
      id: validate
      run: terragrunt run-all validate --terragrunt-log-level $LOG_LEVEL
      working-directory: ./terraform/environments/prod

    - name: Terragrunt plan
      id: plan
      run: terragrunt run-all plan --terragrunt-log-level $LOG_LEVEL
      working-directory: ./terraform/environments/prod
      continue-on-error: true

    - name: Update Pull Request
      uses: actions/github-script@v6
      if: github.evnet_name == 'pull_request'
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          const output = `#### Terragrunt Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terragrunt Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terragrunt Plan üìñ\`${{ steps.plan.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pushed by: @${context.actor}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
